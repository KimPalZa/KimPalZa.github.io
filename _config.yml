title: Paradigm # 사이트 제목
description: | # 아바타 뒤에 있는 정보(html 형식), <br/>는 줄바꿈을 나타냅니다.
  KimPalZa<br/>
  내 팔자에 주러리<br/>
  <a href="me@palza.org">
    <i class="fa-solid fa-envelope"></i>
  </a>
  <a href="https://github.com/kimpalza">
    <i class="fa-brands fa-github"></i>
  </a>
  <br/>
url: https:/https://kimpalza.github.io/ # 你的域名，例如 https://wu-kan.github.io
baseurl: "" # 블로그가 특정 디렉터리에 구축되어 있는 경우 여기에 디렉터리 이름을 추가하고 아래에 구성된 모든 링크의 '/assets' 앞에도 추가하세요. 즉, '/your_baseurl/assets'입니다. 이 항목 끝에는 '/'가 없어야 합니다.

defaults: # <https://jekyllrb.com/docs/configuration/front-matter-defaults/> 기능을 사용하여 모든 구성 옵션을 구성하세요.
  - scope:
      path: "" # 여기서 빈 문자열은 프로젝트의 모든 파일을 의미합니다.
    values: # 다음 구성 항목은 모든 페이지에서 사용자 정의할 수도 있습니다.
      jekyll-theme-WuK: # 내 테마의 사용자 정의 스타일은 모두 이 네임스페이스에 있습니다.
#        comments: # 메시지 페이지를 먼저 수정하여 자신의 저장소를 사용하고 있는지 확인하세요! <https://utteranc.es/>를 참고하세요.
#          append: |
#            <script
#              repo="wu-kan/utterances-storage"
#              src="https://utteranc.es/client.js"
#              issue-term="url"
#              theme="github-dark" 
#              crossorigin="anonymous"
#              async="async"
#            ></script>
        default:
          body:
            theme-base: theme-base-0f # 선택적 테마 색상에는 08~0f가 포함됩니다. <https://github.com/poole/lanyon>을 참조하세요.
            layout-reverse: true # 열면 사이드바가 오른쪽에 있고, 그렇지 않으면 왼쪽에 있습니다.
            sidebar-overlay: true # 이 기능을 켜면 사이드바의 움직임에 따라 텍스트가 움직이지 않습니다.
          html_lang: ko # <https://www.w3school.com.cn/tags/html_ref_language_codes.asp>
          sidebar: # 이 구성 항목 아래에는 사이드바에 대한 일부 구성이 있습니다.
            disable: false # 사이드바 표시 여부
            avatar: # 사이드바에 표시된 아바타
              enable: true
              img: https://avatars.githubusercontent.com/u/112746031?v=4 # 아바타의 주소
            nav: # 탐색 섹션의 콘텐츠에 대해 텍스트, 아이콘(fontawesome에서 제공) 및 해당 링크를 직접 추가할 수도 있습니다.
              - title: '<i class="fa-solid fa-home fa-fw"></i> Home'
                href: /
#              - title: '<i class="fa-solid fa-comment fa-fw"></i> comments'
#                href: /comments/
              - title: '<i class="fa-solid fa-archive fa-fw"></i> Archive'
                href: /archive/
              - title: '<i class="fa-solid fa-tags fa-fw"></i> Label'
                href: /tags/
              #- title: '<i class="fa-solid fa-coffee fa-fw"></i> Reward'
              #  href: /merger/
            simple_jekyll_search: # 사이드바에서 사이트 전체 검색
              enable: true
              full_text_search: false # 검색 및 로딩 속도가 느려질 수 있음
              append: | # 이해가 안 되시면 바꾸지 마세요.
                <style>
                  #sidebar-search-input {
                    background: none;
                    border: none;
                    color: White;
                    width: 100%;
                  }
                  #sidebar-search-results-container {
                    overflow: hidden hidden;
                    max-height: 66.6vh;
                  }
                  #sidebar-search-results-container:hover {
                    overflow: auto auto;
                  }
                </style>
                <input
                  id="sidebar-search-input"
                  placeholder="게시물 검색"
                />
                <ol
                  id="sidebar-search-results-container"
                ></ol>
                <script
                  src='https://cdn.jsdelivr.net/npm/simple-jekyll-search@1.9.1'
                  async='async'
                  onload='
                    SimpleJekyllSearch({
                      json: "/assets/simple-jekyll-search/search.json",
                      searchInput: document.getElementById("sidebar-search-input"),
                      resultsContainer: document.getElementById("sidebar-search-results-container"),
                      searchResultTemplate: `<li><a href="{url}">{title}</a></li>`,
                      limit: 99,
                      fuzzy: true
                    })'
                ></script>
            jekyll-toc: # 사이드바용 목차 플러그인，https://github.com/allejo/jekyll-toc
              enable: true
              prepend: | # 디렉토리가 너무 길면 자동으로 축소
                <style>
                  #toc {
                    overflow: hidden hidden;
                    max-height: 66.6vh;
                  }
                  #toc:hover{
                    overflow: auto auto;
                  }
                </style>
            append_to_sidebar:
              #- <script defer="defer" src="https://cdn.jsdelivr.net/gh/poole/lanyon@v1.1.0/public/js/script.min.js"></script> # 버튼 대신 빈 공간을 클릭하여 사이드바를 닫는 위젯, 선택사항
              - | # 사이드바에 테마 색상 사용
                <style>
                  #sidebar-checkbox:checked ~ .sidebar-toggle,
                  .sidebar,
                  .sidebar-toggle:active {
                    background-color: var(--theme-base-color);
                  }
                </style>
              - | # 사이드바 버튼을 클릭하여 상단으로 돌아가는 문제 수정
                <style>
                  .sidebar-checkbox {
                    display: none;
                  }
                  .sidebar-toggle {
                    position: fixed;
                    background: none;
                  }
                </style>
              - | # 특정 상황에서 사이드바가 흔들리는 문제를 해결했습니다. 감사합니다. [@AmachiInori](https://github.com/wu-kan/wu-kan.github.io/issues/11)
                <style>
                  .sidebar {
                    overflow: hidden;
                    min-height: 101%;
                  }
                  .sidebar:hover{
                    overflow-y: scroll; 
                  }
                </style>
              - | # 사이드바 아바타 효과
                <style>
                  .effect {
                    margin: 1rem;
                    perspective: 900px;
                  }
                  .effect-info {
                    text-align: center;
                    position: absolute;
                    top: 0;
                    width: 100%;
                    transform-style: preserve-3d;
                  }
                  .effect-img {
                    z-index: 11;
                    width: 100%;
                    height: 100%;
                    position: relative;
                    transition: all 0.5s ease-in-out;
                  }
                  .effect-img:before {
                    position: absolute;
                    display: block;
                  }
                  .effect-right_to_left .effect-img {
                    transform-origin: 0% 50%;
                  }
                  .effect-right_to_left:hover .effect-img {
                    transform: rotate3d(0, 1, 0, -180deg);
                  }
                </style>
              - | # 실행시간은 마지막 3번째 줄의 시간을 자신의 홈페이지 구축시간으로 변경하시면 되며, 형식은 위와 동일하며, 필요없으시면 삭제하시면 됩니다.
                <div>
                  <i class="fa-solid fa-cog fa-spin fa-fw"></i>
                  <span id="run_time_day">
                    <i class="fa-solid fa-spinner fa-pulse"></i>
                  </span>일
                  <span id="run_time_hour">
                    <i class="fa-solid fa-spinner fa-pulse"></i>
                  </span>시간
                  <span id="run_time_minute">
                    <i class="fa-solid fa-spinner fa-pulse"></i>
                  </span>분
                  <span id="run_time_second">
                    <i class="fa-solid fa-spinner fa-pulse"></i>
                  </span>초
                  <script>
                    setInterval(function (d,h,m,s,b) {
                      function setzero(i) {
                        return i < 10 ? "0" + i : i;
                      }
                      let BirthDay = new Date(b);
                      let today = new Date();
                      let timeold = (today.getTime() - BirthDay.getTime());
                      let sectimeold = timeold / 1000;
                      let secondsold = Math.floor(sectimeold);
                      let msPerDay = 24 * 60 * 60 * 1000;
                      let e_daysold = timeold / msPerDay;
                      let daysold = Math.floor(e_daysold);
                      let e_hrsold = (e_daysold - daysold) * 24;
                      let hrsold = Math.floor(e_hrsold);
                      let e_minsold = (e_hrsold - hrsold) * 60;
                      let minsold = Math.floor((e_hrsold - hrsold) * 60);
                      let seconds = Math.floor((e_minsold - minsold) * 60);
                      d.textContent = daysold;
                      h.textContent = setzero(hrsold);
                      m.textContent = setzero(minsold);
                      s.textContent = setzero(seconds);
                    },
                    1000,
                    document.getElementById("run_time_day"),
                    document.getElementById("run_time_hour"),
                    document.getElementById("run_time_minute"),
                    document.getElementById("run_time_second"),
                    "11/22/2023 22:42:42")// 이제 첫 번째 CSDN 블로그를 만들 시간입니다.
                  </script>
                </div>
              - | # 페이지 통계가 없습니다. 이해가 되지 않으면 변경하지 마세요.
                <div>
                  <div>
                    <i class="fa-solid fa-eye fa-fw"></i>
                    <span id="busuanzi_value_page_pv">
                      <i class="fa-solid fa-spinner fa-pulse"></i>
                    </span>
                  </div>
                  <div>
                    <i class="fa-solid fa-paw fa-fw"></i>
                    <span id="busuanzi_value_site_pv">
                      <i class="fa-solid fa-spinner fa-pulse"></i>
                    </span>
                  </div>
                  <div>
                    <i class="fa-solid fa-user-friends fa-fw"></i>
                    <span id="busuanzi_value_site_uv">
                      <i class="fa-solid fa-spinner fa-pulse"></i>
                    </span>
                  </div>
                  <script
                    src='https://cdn.jsdelivr.net/npm/busuanzi@2.3/bsz.pure.mini.js'
                    async='async'
                  ></script>
                </div>
              - | # 제 테마가 유용하다고 생각하시면 더 많은 사람들에게 알려주세요!
                <div>
                  <i class="fa-solid fa-thumbs-up fa-fw"></i>
                  <a href="https://jekyll-theme-WuK.wu-kan.cn">
                    jekyll-theme-WuK
                  </a>
                </div>
              - | # 저작권 진술
                <div>
                  <i class="fa-solid fa-copyright fa-fw"></i>
                  2017-2022 WuK
                </div>
            wordcount: # 사이트 전체 단어 수 통계
              enable: false # 로컬 디버깅 중에는 끄는 것이 좋습니다. 이는 사이트 생성 속도에 큰 영향을 미칩니다. (필요한 시간은 블로그 게시물 수의 제곱에 비례합니다.)
              prepend: <i class="fa-solid fa-user-edit fa-fw"></i>
              kilo: 천
              unit: 단위
          append_to_head: # HTML을 삽입하여 플러그인을 소개하고 사용자 정의하고 삭제하기 전에 수행 중인 작업을 확인하세요. 플러그인을 사용자 정의하려면 이 문서를 참조하세요. <https://wu-kan.cn/_posts/2019-01-18-基于Jekyll搭建个人博客/>
            - | # jsdelivr 정지 방지 스크립트, 출처: https://github.com/PipecraftNet/jsdelivr-auto-fallback/blob/0.2.2/index.min.js
              <script>
                (n=>{"use strict";let r,s,e;const l=["cdn.jsdelivr.net","fastly.jsdelivr.net","gcore.jsdelivr.net","cdn.zenless.top","testingcf.jsdelivr.net","test1.jsdelivr.net"],t="//",a=l[0],i=Date.now(),o=2e3,c="jsdelivr-auto-fallback",f="/gh/PipecraftNet/jsdelivr-auto-fallback@main/empty.css?",d=e=>e&&e.includes(t+a),m=e=>e.replace(t+a,t+r),u=window.setTimeout,v=n.querySelectorAll.bind(n),g=()=>{let e,t;for(e of v('link[rel="stylesheet"]'))t=e.href,d(t)&&!t.includes(f)&&(e.href=m(t));for(e of v("script"))if(t=e.src,d(t)){const r=n.createElement("script");r.src=m(t),e.defer=!0,e.src="",e.before(r),e.remove()}for(e of v("img"))t=e.src,d(t)&&(e.src="",e.src=m(t));for(e of v("*[style]"))t=e.getAttribute("style"),d(t)&&e.setAttribute("style",m(t));for(e of v("style"))t=e.innerHTML,d(t)&&(e.innerHTML=m(t))},y=()=>{!e&&s&&r&&(console.warn(a+" is not available. Use "+r),e=!0,u(g,0),u(g,20),setInterval(g,500))},b=(()=>{try{return Object.assign({},JSON.parse(localStorage.getItem(c)||"{}"))}catch{return{}}})();var h=()=>{b.time=i,b.failed=!1,b.fastNode=null;for(const t of l)((e,t)=>{let r;const s=n.createElement("link"),l=e=>{r&&(clearTimeout(r),r=0,e||(s.href="data:text/plain;base64,"),s.remove(),t(e))};r=u(l,o),s.addEventListener("error",()=>l(!1)),s.addEventListener("load",()=>l(!0)),s.rel="stylesheet",s.text="text/css",s.href=e+f+i,n.head.insertAdjacentElement("afterbegin",s)})("https://"+t,e=>{e||t!==a||(s=!0,b.failed=!0),e&&!r&&(r=t),e&&!b.fastNode&&(b.fastNode=t),y()});u(()=>{s&&!r&&(r=l[1],y()),localStorage.setItem(c,JSON.stringify(b))},o+100)};b.time&&i-b.time<36e5&&b.failed&&b.fastNode?(s=!0,r=b.fastNode,y(),u(h,1e3)):h()})(document);
              </script>
            - | # <https://www.runoob.com/cssref/css-colornames.html>에 따라 선택할 수 있는 테마 색상(Mizuno Ai Blue)을 사용자 정의하세요.
              <style>
                .theme-base-0f {
                  --theme-base-color: MidnightBlue;
                }
              </style>
            - | # 일부 페이지 최적화 태그는 이해하지 못하는 경우 건너뛸 수 있습니다.
              <meta
                name="viewport"
                content="width=device-width,minimum-scale=1,initial-scale=1"
              />
              <meta
                http-equiv="content-type"
                content="text/html; charset=utf-8"
              />
              <link
                rel="alternate"
                href="/feed.xml"
                title="RSS"
                type="application/rss+xml"
              />
            - | # 작은 웹사이트 아이콘은 자신의 사진으로 대체할 수 있습니다. href에서 해당 부분을 변경하면 됩니다.
              <link
                rel="apple-touch-icon-precomposed"
                href="https://avatars.githubusercontent.com/u/112746031?v=4"
              />
              <link
                rel="shortcut
                icon"
                href="https://avatars.githubusercontent.com/u/112746031?v=4"
              />
            - | # lanyon의 페이지 스타일, 변경하지 마세요
              <link
                rel="stylesheet"
                href="https://cdn.jsdelivr.net/combine/gh/poole/lanyon@v1.1.0/public/css/poole.min.css,gh/poole/lanyon@v1.1.0/public/css/lanyon.min.css,gh/poole/lanyon@v1.1.0/public/css/syntax.min.css"
              />
            - | # Fontawesome 아이콘, 제목과 인용문 앞에 아이콘 삽입
              <link
                rel="stylesheet"
                href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.1/css/all.min.css"
              />
            - | # 사이드바 확대/축소 수정
              <style>
                .wrap {
                  transition-property: width,background-size,transform;
                  transition-duration: .3s;
                  transition-timing-function: ease-in-out;
                  display: inline-block;
                }
                @media screen and (min-width: 28rem) {
                  .sidebar-overlay #sidebar-checkbox:checked ~ .wrap {
                    width: calc(100% - 14rem);
                    transform: translateX(14rem);
                  }
                  .layout-reverse.sidebar-overlay #sidebar-checkbox:checked ~ .wrap {
                    transform: translateX(0);
                  }
                }
              </style>
            - | # <https://zenozeng.github.io/fonts.css/>，크로스 플랫폼 중국어 글꼴 솔루션
              <link
                rel="stylesheet"
                href="https://cdn.jsdelivr.net/npm/@fontsource/courier-prime@4.5.9/index.min.css"
              />
              <link
                rel="stylesheet"
                href="https://cdn.jsdelivr.net/npm/@fontsource/noto-serif-tc@4.5.12/500.min.css"
              />
              <link
                rel="stylesheet"
                href="https://cdn.jsdelivr.net/npm/@fontsource/noto-serif-sc@4.5.12/chinese-simplified-500.min.css"
              />
              <style>
                .sidebar, html, h1, h2, h3, h4, h5, h6, code, pre {
                  font-family: "Courier Prime", "Courier New", "Courier", "Noto Sans Mono", "Noto Serif TC", "Noto Serif SC", "Noto Serif CJK TC", "Noto Serif CJK SC", "Source Han Serif SC", "Source Han Serif CN", STZhongsong, STSong, "Songti SC", "AR PL New Sung", "AR PL SungtiL GB", NSimSun, SimSun, "TW\-Sung", "WenQuanYi Bitmap Song", "AR PL UMing CN", "AR PL UMing HK", "AR PL UMing TW", "AR PL UMing TW MBE", PMingLiU, MingLiU, monospace;
                }
              </style>
            - | # 인라인 이미지의 기본 스타일 수정
              <style>
                img {
                  display: inline-block;
                  margin: 0;
                }
              </style>
            - | # 맞춤 스크롤 막대는 Chrome 브라우저에만 유효합니다
              <style>
                ::-webkit-scrollbar {
                  width: 3px;
                  height: 3px;
                }
                ::-webkit-scrollbar-thumb {
                  background-color: Gray;
                }
              </style>
            - | # 코드 블록이 너무 길지 않도록 방지
              <style>
                @media only screen {
                  pre {
                    white-space: pre;
                    max-height: 66.6vh;
                    padding: 0 1rem;
                    overflow: hidden hidden;
                  }
                  pre:hover {
                    overflow: auto auto;
                  }
                }
              </style>
            - | # 링크 스타일 수정
              <style>
                .container a,
                .related-posts li a:hover {
                  color: inherit;
                  text-decoration: none;
                  border-bottom: 1px solid var(--theme-base-color);
                }
              </style>
        page:
          title: # 각 페이지에 대한 H1 제목 자동 생성
            enable: true
          prepend:
            - | # 제목과 인용문 앞에 아이콘 삽입
              <style>
                h1::before,
                h2::before,
                h3::before,
                h4::before,
                h5::before,
                h6::before,
                blockquote::before {
                  font-family: "Font Awesome 6 Free";
                  font-weight: bold;
                  font-size: smaller;
                  margin-right: .5rem;
                  content: "\f292";
                }
                blockquote::before { content: "\f10d"; }
              </style>
            - | # 글꼴 색상 선택
              <style>
                ::selection {
                  color: White;
                  background: Black;
                }
              </style>
            - | # 제목 스타일 조정
              <style>
                h1, h2, h3, h4, h5, h6 {
                  margin: 2rem 0rem 1rem 0rem;
                }
              </style>
            - | # 테이블 스타일의 미화
              <style>
                td,
                th {
                  padding: 0px;
                  border: 0px;
                }
                table {
                  border: 0px;
                }
                table tbody {
                  display: block;
                  overflow: scroll;
                }
                table thead,
                tbody tr {
                  display: table;
                  table-layout: fixed;
                  width: 100%;
                }
              </style>
            - | # 테이블 항목의 줄 간격 늘리기
              <style>
                .content li {
                  margin: .25rem;
                }
              </style>
            - | # 첫 번째 줄을 2자씩 들여씁니다.
              <style>
                p {
                  text-indent: 2rem;
                }
                p img {
                  max-width: calc(100% - 4rem);
                }
              </style>
            - | # 와이드스크린에서 디스플레이 콘텐츠 늘리기
              <style>
                .container {
                  min-width: 66.6%;
                  min-height: 100vh;
                }
                @media only print {
                  .container {
                    min-width: 100%;
                  }
                }
              </style>
            - |
              <style>
                .container.content {
                  padding: 2rem;
                }
              </style>
          plugin:
            - smart_include:
                enable: true
                key: $
              append:
                | # 페이지를 초과하는 긴 수식의 KaTeX 렌더링 수정[@AmachiInori](https://github.com/wu-kan/wu-kan.github.io/issues/13)
                <link
                  rel="stylesheet"
                  href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
                />
                <style>
                  .katex-display>.katex {
                    white-space: normal;
                  }
                </style>
                <script
                  src="https://cdn.jsdelivr.net/combine/npm/katex@0.16.4/dist/katex.min.js,npm/katex@0.16.4/dist/contrib/auto-render.min.js"
                  async="async"
                  onload='renderMathInElement(document.body, { delimiters: [{left: "$$", right: "$$", display: true}, { left: "$", right: "$", display: false }, {left: "\\(", right: "\\)", display: false}, {left: "\\[", right: "\\]", display: true}]})'
                ></script>
            - smart_include:
                enable: true
                key: language-vega-lite
              append: |
                <style>
                  pre.language-vega-lite,
                  code.language-vega-lite {
                    display: none;
                  }
                </style>
                <script
                  src="https://cdn.jsdelivr.net/combine/npm/vega@5.22.1,npm/vega-lite@5.6.0,npm/vega-embed@6.21.0"
                  async="async"
                  onload='
                    for(let x of document.getElementsByClassName("language-vega-lite"))
                      if(x.nodeName=="CODE")
                      {
                        let m = document.createElement("div");
                        x.parentNode.insertAdjacentElement("beforebegin", m);
                        vegaEmbed(m, JSON.parse(x.textContent));
                      }'
                ></script>
            - smart_include:
                enable: true
                key: language-mermaid
              append: |
                <style>
                  pre.language-mermaid,
                  code.language-mermaid {
                    display: none;
                  }
                  @media only screen {
                    .mermaid {
                      overflow: hidden hidden;
                      max-width: 100%;
                      max-height: 66.6vh;
                    }
                    .mermaid {
                      overflow: auto auto;
                    }
                  }
                </style>
                <script
                  src="https://cdn.jsdelivr.net/npm/mermaid@9.3.0/dist/mermaid.min.js"
                  async="async"
                  onload='
                    for(let x of document.getElementsByClassName("language-mermaid"))
                      if(x.nodeName=="CODE")
                      {
                        let m = document.createElement("div");
                        m.classList.add("mermaid");
                        m.textContent = x.textContent;
                        x.parentNode.insertAdjacentElement("beforebegin", m);
                      }'
                ></script>
            - smart_include:
                enable: false
#              append: | # live2d 빌보드걸을 소개합니다! 이 항목이 필요하지 않으면 삭제할 수 있습니다.
#                <link
#                  rel="stylesheet"
#                  href="https://cdn.jsdelivr.net/gh/Dreamer-Paul/Pio@2.4/static/pio.min.css"
#                />
#                <style>
#                  @media only print {
#                    .pio-container {
#                      display: none;
#                    }
#                  }
#                </style>
#                <script
#                  async="async"
#                  src="https://cdn.jsdelivr.net/combine/gh/Dreamer-Paul/Pio@2.4/static/l2d.min.js,gh/Dreamer-Paul/Pio@2.4/static/pio.min.js"
#                  onload='
#                    let pio_container = document.createElement("div");
#                    pio_container.classList.add("pio-container");
#                    pio_container.classList.add("right");
#                    pio_container.style.bottom = "-2rem";
#                    pio_container.style.zIndex = "1";
#                    document.body.insertAdjacentElement("beforeend", pio_container);
#                    let pio_action = document.createElement("div");
#                    pio_action.classList.add("pio-action");
#                    pio_container.insertAdjacentElement("beforeend", pio_action);
#                    let pio_canvas = document.createElement("canvas");
#                    pio_canvas.id = "pio";
#                    pio_canvas.style.width = "14rem";
#                    pio_canvas.width = "600";
#                    pio_canvas.height = "800";
#                    pio_container.insertAdjacentElement("beforeend", pio_canvas);
#                    let pio = new Paul_Pio({
#                      "mode": "fixed",
#                      "hidden": true,
#                    "night": "for(let i=7; i<16; ++i) if(document.body.classList.contains(`theme-base-0`+i.toString(16))) { document.body.classList.remove(`theme-base-0`+i.toString(16)); document.body.classList.add(`theme-base-0`+((i-6)%9+7).toString(16)); break; }",
#                      "content": {
#                        "link": ["https:\/\/jekyll-theme-WuK.wu-kan.cn"],
#                        "skin": ["要换成我的朋友吗？", "让她放个假吧~"],
#                        "hidden": true,
#                        "custom": [{
#                          "selector": "a",
#                          "type": "link",
#                        }, {
#                          "selector": ".sidebar-toggle",
#                          "text": "打开侧边栏叭~"
#                        }, {
#                          "selector": ".effect-info",
#                          "text": "哇，你发现了什么！"
#                        }, {
#                          "selector": "#sidebar-search-input",
#                          "text": "想搜索什么呢？很多干货哦！"
#                        }, {
#                          "selector": "#toc",
#                          "text": "这是目录~"
#                        }, {
#                          "selector": ".page-title",
#                          "text": "这是标题~"
#                        }]
#                      },
#                      "model": [
#                        "https:\/\/cdn.jsdelivr.net/gh/imuncle/live2d/model/33/model.2018.bls-winter.json",
#                        "https:\/\/cdn.jsdelivr.net/gh/imuncle/live2d/model/platelet-2/model.json",
#                        "https:\/\/cdn.jsdelivr.net/gh/imuncle/live2d/model/xiaomai/xiaomai.model.json",
#                        "https:\/\/cdn.jsdelivr.net/gh/imuncle/live2d/model/mashiro/seifuku.model.json",
#                        "https:\/\/cdn.jsdelivr.net/gh/imuncle/live2d/model/Violet/14.json",
#                        "https:\/\/cdn.jsdelivr.net/gh/xiaoski/live2d_models_collection/Kobayaxi/Kobayaxi.model.json",
#                        "https:\/\/cdn.jsdelivr.net/gh/xiaoski/live2d_models_collection/mikoto/mikoto.model.json",
#                        "https:\/\/cdn.jsdelivr.net/gh/xiaoski/live2d_models_collection/uiharu/uiharu.model.json"]
#                    });'
#                ></script>
        post:
          date: # 블로그 시간 표시
            enable: true
            prepend: <i class="fa-solid fa-calendar-day fa-fw"></i>
          wordcount: # 총 단어 수를 센다
            enable: true
            prepend: <i class="fa-solid fa-file-word fa-fw"></i>
            unit: 자
          readtime: # 기사 읽기 시간 계산
            enable: true
            prepend: <i class="fa-solid fa-clock fa-fw"></i>
            unit: 분
            divided_by: 300 # 보통 사람의 읽기 속도는 분당 약 300 단어입니다.
          copyright:
            | #가 귀하 또는 귀하의 사용을 보증한다는 것을 암시해서는 안 됩니다.
            <br/>
            <i class="fab fa-creative-commons-by fa-fw"></i>
            <a
              href="https://creativecommons.org/licenses/by/4.0/deed.ko"
              rel="license">
              CC BY 4.0
            </a>
            （일부 특수한 글이나 재인쇄된 기사를 제외하고）
            <br/>
#            <i class="fa-solid fa-coffee fa-fw"></i>
#            <a href="/merger/">블로그가 도움이 되셨다면 커피 한잔 사주세요~</a>
#        merger: # 보상 페이지 구성이 필요합니다!
#          append_to_head:
#            - | # 구성해야 하는 변수는 다음을 참조하세요.<https://merger.justhx.com/cn/docs/configure>
#              <script>
#                var myname = "WuK";
#                var profile = "i@wu-kan.cn";
#                var usage = "payment";
#                var wechat = "wxp://f2f0BhUoIC_9gex7-tC2PRvVuoA486mK5WyC";
#                var tenpay = "https://i.qianbao.qq.com/wallet/sqrcode.htm?m=tenpay&f=wallet&a=1&ac=CAEQ77zFwQMY-6u57gU%3D_xxx_sign&u=942759535&n=%E8%94%9A";
#                var alipay = "https://qr.alipay.com/fkx02750b5kbplxvudqrx16";
#                var paypal = "https://paypal.me/wukan0621";
#                var multilingual = false;
#                var branding = false;
#                var title = "选择你的支付方式";
#                var subtitle = "跟随进一步的指示以向" + myname + "付款";
#                var qrcodeapi = "https://www.zhihu.com/qrcode?url=";
#                var gravatar_url = "https://gravatar.loli.net/avatar/";
#              </script>
#            - |
#              <meta
#                charset="utf-8"
#              />
#              <meta
#                name="viewport"
#                content="initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
#              />
#              <meta
#                http-equiv="Content-Security-Policy"
#                content="upgrade-insecure-requests"
#              />
#            - | # merger페이지 스타일
#              <link rel="stylesheet" href="https://cdn.jsdelivr.net/combine/gh/hifocus/merger@0.26.1/assets/styles/spectre.css/spectre-modified.min.css,gh/hifocus/merger@0.26.1/assets/styles/style.min.css">
#              <script defer="defer" src="https://cdn.jsdelivr.net/combine/npm/jquery@3.5.1"></script>
#              <script defer="defer" src="https://cdn.jsdelivr.net/combine/gh/lrsjng/jquery-qrcode@0.18.0/dist/jquery-qrcode.min.js,npm/blueimp-md5@2.18.0/js/md5.min.js,gh/hifocus/merger@0.26.1/assets/js/function.min.js,gh/hifocus/merger@0.26.1/assets/js/font_974919_xgtacm93vxp.min.js"></script>
        home: # 디스플레이 페이지 구성은 건너뛸 수 있습니다. 자세한 내용은 다음을 참조하세요<https://revealjs.com/>
          append_to_section_tag:
            - key: data-markdown
            - key: data-separator # 가로 표시 페이지 구분 기호
              value: <!-- .slide -->
            - key: data-separator-vertical # 세로 표시 페이지 구분 기호
              value: <!-- .slide vertical=true -->
            - key: data-background-color
              value: "White"
          prepend: |
            <link
              rel="stylesheet"
              href="https://cdn.jsdelivr.net/combine/npm/reveal.js@4.4.0/dist/reveal.min.css,npm/reveal.js@4.4.0/dist/theme/serif.min.css"
            />
            <style>
              .sidebar {
                line-height: 1.5;
              }
              .reveal .slides {
                text-align: left;
              }
              .reveal a,
              .reveal a:hover,
              .reveal a:focus {
                color: inherit;
                border-bottom: 1px solid var(--theme-base-color);
              }
            </style>
          append: |
            <script
              async="async"
              src="https://cdn.jsdelivr.net/combine/npm/reveal.js@4.4.0/dist/reveal.min.js,npm/reveal.js@4.4.0/plugin/markdown/markdown.min.js,npm/reveal.js@4.4.0/plugin/math/math.min.js"
              onload="
              for(let x of document.getElementsByClassName('wrap'))
                x.classList.add('reveal');
              Reveal.initialize({
                height: '100%',
                mouseWheel: true,
                navigationMode: 'linear',
                plugins: [ RevealMarkdown,RevealMath.KaTeX ]
              });
            "></script>

compress_html: # <https://github.com/penibelst/jekyll-compress-html>
  clippings: all
  comments: [] # 댓글은 압축할 수 없습니다. 압축하지 않으면 공개.js의 ppt 화면 전환에 영향을 미칩니다.
  endings: all
  ignore:
    envs: all # 일시적으로 페이지 압축 끄기
  blanklines: false
  profile: false
  startings: []

# githubpage지원되는 플러그인을 확인하세요.见<https://pages.github.com/versions/>
plugins: # <https://jekyllrb.com/docs/plugins/>
  - jekyll-readme-index # 렌더링 효과가 github과 일치하도록 readme를 색인으로 사용하십시오.
  - jekyll-default-layout # 각 마크다운에 대한 레이아웃 자동 생성
  - jekyll-seo-tag # 각 페이지의 제목 생성
  - jekyll-sitemap # 사이트에 대한 사이트맵 생성
  - jekyll-feed # 사이트에 대한 RSS 피드 생성
  - jekyll-redirect-from # 사이트 페이지 리디렉션
  - jekyll-remote-theme # 테마의 앞면과 뒷면을 분리하려면 Remote_theme 플러그인을 사용하세요.<https://github.com/benbalter/jekyll-remote-theme/>

remote_theme: https://github.com/wu-kan/jekyll-theme-WuK@4.2.0 #테마 업데이트로 인해 사이트가 잘못 표시되는 것을 방지하려면 고정 버전 번호를 사용하세요.

readme_index: # index.md와 index.html이 누락된 경우 README.md를 사용하여 교체하세요.
  with_frontmatter: true # yaml 헤더로 README 지원

webmaster_verifications: # <https://jekyll.github.io/jekyll-seo-tag/usage/>
  google: YIKi1rBnyUaS-DMYiluseI5kZzTwjCkTFmKkSkMZDJk

permalink: pretty
# timezone: Asia/Shanghai # githubpage에서 잘못된 표시 시간 문제 해결, 참조<https://www.iana.org/time-zones>
future: true # 향후 게시 예정인 기사를 허용합니다.

# limit_posts: 999 # 블로그 게시물 수를 제한하세요
# encoding: utf-8

markdown: kramdown
kramdown: # 참조<https://kramdown.gettalong.org/options.html>
  input: GFM # 见<http://jekyllcn.com/docs/configuration/#kramdown>
  syntax_highlighter_opts: # <https://kramdown.gettalong.org/syntax_highlighter/rouge.html>
    block:
      disable: false
      line_numbers: false #렌더링 효과가 굉장하네요
    span:
      disable: false
# 다음은 githubpage에서 수정할 수 없는 매개변수입니다.<https://help.github.com/en/github/working-with-github-pages/about-github-pages-and-jekyll>
#lsi: false # 为相关文章生成索引
#safe: true # 禁用自定义插件
#source: [your repo's top level directory] # Jekyll 读取文件的路径
#incremental: false # 增量生成
#highlighter: rouge # 代码高亮器
#gist:
#  noscript: false
#kramdown:
#  math_engine: mathjax
#  syntax_highlighter: rouge
